$:.unshift File.join(File.dirname(__FILE__), "..", "lib", "small_eigen_collider")

require "yaml"
require "serialization"
require "array_chopper"

raise "known_bad.yml doesn't exist - this file is required to indicate what should crash the ruby" unless File.exist?("known_bad.yml")

if __FILE__ == $0
  original_bad_array = YAML.load_file("known_bad.yml")
  current_bad_array = original_bad_array

  array_test = Proc.new do |array|
    STDERR.puts "Array size is #{array.size}"
    sleep 1
    File.open("tasks.yml", "w") {|f| YAML.dump(array, f)}
    result = system("ruby bin/small_eigen_collider")
    STDERR.puts "Result for array size of #{array.size} was #{result.inspect}"
    result
  end

  10.times do
    break if current_bad_array.size == 1
    array_chopper = ArrayChopper.new(current_bad_array, array_test)
    array_chopper.run
    current_bad_array = array_chopper.minimal_failure
  end
  File.open("minimal_failure.yml", "w") {|f| YAML.dump(current_bad_array, f)}
end
